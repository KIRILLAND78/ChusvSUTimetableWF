<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ctPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>